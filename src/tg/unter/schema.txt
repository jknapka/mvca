CREATE TABLE tg_group (
	group_id INTEGER NOT NULL, 
	group_name VARCHAR(16) NOT NULL, 
	display_name VARCHAR(255), 
	created DATETIME, 
	PRIMARY KEY (group_id), 
	UNIQUE (group_name)
);
CREATE TABLE tg_user (
	user_id INTEGER NOT NULL, 
	user_name VARCHAR(16) NOT NULL, 
	email_address VARCHAR(255) NOT NULL, 
	display_name VARCHAR(255), 
	password VARCHAR(128), 
	created DATETIME, 
	PRIMARY KEY (user_id), 
	UNIQUE (user_name), 
	UNIQUE (email_address)
);
CREATE TABLE tg_permission (
	permission_id INTEGER NOT NULL, 
	permission_name VARCHAR(63) NOT NULL, 
	description VARCHAR(255), 
	PRIMARY KEY (permission_id), 
	UNIQUE (permission_name)
);
CREATE TABLE need_event (
	neid INTEGER NOT NULL, 
	ev_type INTEGER NOT NULL, 
	date_of_need INTEGER NOT NULL, 
	time_of_need INTEGER NOT NULL, 
	duration INTEGER NOT NULL, 
	volunteer_count INTEGER NOT NULL, 
	affected_persons INTEGER NOT NULL, 
	notes VARCHAR(2048) NOT NULL, 
	PRIMARY KEY (neid)
);
CREATE TABLE tg_group_permission (
	group_id INTEGER NOT NULL, 
	permission_id INTEGER NOT NULL, 
	PRIMARY KEY (group_id, permission_id), 
	FOREIGN KEY(group_id) REFERENCES tg_group (group_id) ON DELETE CASCADE ON UPDATE CASCADE, 
	FOREIGN KEY(permission_id) REFERENCES tg_permission (permission_id) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE tg_user_group (
	user_id INTEGER NOT NULL, 
	group_id INTEGER NOT NULL, 
	PRIMARY KEY (user_id, group_id), 
	FOREIGN KEY(user_id) REFERENCES tg_user (user_id) ON DELETE CASCADE ON UPDATE CASCADE, 
	FOREIGN KEY(group_id) REFERENCES tg_group (group_id) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE volunteer_info (
	viid INTEGER NOT NULL, 
	description VARCHAR(255) NOT NULL, 
	phone VARCHAR(32), 
	user_id INTEGER, 
	PRIMARY KEY (viid), 
	FOREIGN KEY(user_id) REFERENCES tg_user (user_id)
);
CREATE INDEX ix_volunteer_info_user_id ON volunteer_info (user_id);
CREATE TABLE volunteer_availability (
	vaid INTEGER NOT NULL, 
	days_of_week INTEGER NOT NULL, 
	start_time INTEGER NOT NULL, 
	end_time INTEGER NOT NULL, 
	user_id INTEGER, 
	PRIMARY KEY (vaid), 
	FOREIGN KEY(user_id) REFERENCES tg_user (user_id)
);
CREATE INDEX ix_volunteer_availability_user_id ON volunteer_availability (user_id);
CREATE TABLE volunteer_response (
	vrid INTEGER NOT NULL, 
	user_id INTEGER NOT NULL, 
	neid INTEGER NOT NULL, 
	PRIMARY KEY (vrid), 
	FOREIGN KEY(user_id) REFERENCES tg_user (user_id), 
	FOREIGN KEY(neid) REFERENCES need_event (neid)
);
CREATE TABLE migrate_version (
	version_num VARCHAR(32) NOT NULL, 
	CONSTRAINT migrate_version_pkc PRIMARY KEY (version_num)
);
